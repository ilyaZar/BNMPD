% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{cbpf_as_cpp}
\alias{cbpf_as_cpp}
\title{Runs a conditional SMC (bootstrap particle filter)}
\usage{
cbpf_as_cpp(N, TT, DD, y, num_counts, Regs_beta, sig_sq_x, phi_x, x_r)
}
\arguments{
\item{N}{number of particles}

\item{TT}{time series dimension}

\item{DD}{number of dirichlet fractions/shares i.e. categories}

\item{y}{measurements: dirichlet fractions/shares}

\item{num_counts}{measurements: dirichlet-multinomial total counts per time
period (\code{T}-dimensional vector)}

\item{Regs_beta}{result of regressor values i.e. z_{t} (matrix) multiplied by
parameters/coefficients (vector) over ALL \code{d=1...DD} components}

\item{sig_sq_x}{\code{DD}-dimensional vector of latent state error variance}

\item{phi_x}{\code{DD}-dimensional vector of autoregressive parameters of
latent state process}

\item{x_r}{reference/conditioning trajectory}
}
\value{
arma::matrix of DD components: DD columns are
\code{NxTT}-dimensional matrices each containing the conditional BPF
output per d'th component
}
\description{
Runs a conditional bootstrap particle filter with ancestor sampling and arma
randon numbers (see the use of arma::randn()). Used within a PGAS procedure
e.g. called via \code{pgas_arma()}.
}
