% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/00_generate_data_t_n.R
\name{generate_data_t_n}
\alias{generate_data_t_n}
\title{Generates multivariate (non-linear) panel data for various models.}
\usage{
generate_data_t_n(
  par_trues,
  distribution,
  x_levels,
  X_LOG_SCALE,
  options_include = list(intercept = NULL, policy = NULL, zeros = NULL),
  options_plot = list(measurements = FALSE, states = FALSE, states_each_d = FALSE),
  seed_no = NULL
)
}
\arguments{
\item{par_trues}{an object of class "\code{trueParams}" which is a list of
true parameter values and meta information such as distribution,
model dimension, the seed under which the true parameters are generated,
the logical indicators that describe which parameters to generate and their
lengths, as provided by the function \code{\link[=new_trueParams]{new_trueParams()}}}

\item{distribution}{specifies the distribution: "dirichlet", "gen_dirichlet",
multinomial", "dirichlet_mult", "gen_dirichlet_mult", or "normal" (the
latter generates the latent states without link-function and measurement/
response transformations, which is useful e.g. when testing the pure Gibbs
sampler)}

\item{x_levels}{target "mean" levels of the states around which they
fluctuate}

\item{X_LOG_SCALE}{logical; if \code{TRUE}, \code{x_levels} are taken as logs
and the random number generation for the states is performed in logs}

\item{options_include}{a list of options for various effects:
\itemize{
\item{\code{intercept: }}{logical vector of dimension \code{DD};
if \code{TRUE} include an intercept at the cross sectional unit for
component \code{d}}
\item{\code{policy: }}{logical vector of dimension \code{DD}; if
\code{TRUE} include a policy dummy at the cross sectional unit for
component \code{d}}
\item{\code{zeros: }}{numeric vector of dimension \code{DD} with
values 1, 2, 3 or 4:
\itemize{
\item{1: }{A dummy pattern that starts at the beginning with zeros
and jumps after half of the overall time period}
\item{2: }{A dummy pattern that starts at the beginning with ones and
plummets to zeros after half of the overall time period}
\item{3: }{A dummy pattern that starts at the beginning with one,
then plummets to zeros after a third of the overall time periods, and
then reverts back to ones for the last third of the time}
\item{4: }{A dummy pattern that starts at the beginning with zeros,
then jumps to ones after a third of the overall time periods, and
then reverts back to zeros for the last third of the time}
}
}
}}

\item{options_plot}{a list of options for plotting data after simulation:
\itemize{
\item{\code{plt_y: }}{logical; if \code{TRUE}, measurements are plotted
per cross sectional unit \code{n=1,...,N}}
\item{\code{plt_x: }}{logical; if \code{TRUE}, latent states are plotted
per cross sectional unit \code{n=1,...,N} with a joint plot of all
components together}
\item{\code{plt_x_per_d: }}{logical; if \code{TRUE}, latent states are
plotted per cross sectional unit \code{n=1,...,N} with a separate plot for
each component}
}}

\item{seed_no}{integer; random seed set at the beginning of the simulation
for reproducibility purposes, set \code{NULL} if not required}
}
\value{
a named list of two elements, the first one being a list of three:
\itemize{
\item{\code{data: }}{a list of at most two elements (if \code{distribution}
is of type Dirichlet, the second element is \code{NULL}, but otherwise has
the total number of counts e.g. in a Dirichlet-multinomial model)}
\item{\code{regs: }}{list of regressors with two elements: 'z' and 'u'}
\item{\code{states: }}{simulated latent states}
}
and the second being the first argument i.e. an instance of class
\code{trueParams} that is used to generate simulated data (from the
corresponding true parameter values as stored in this object)
}
\description{
The measurements (responses, dependent variables) have a Dirichlet,
Multinomial or Dirichlet-Multinomial distribution. The multivariate draws
can vary along the time and cross-sectional dimensions. This is because the
parameters of the distributions that generate the draws are modelled as a
function of regressors and latent states where the regressors and latent
states can vary over time and cross section.
}
